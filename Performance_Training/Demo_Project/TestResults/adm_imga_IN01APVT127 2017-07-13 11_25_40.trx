<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="f74abc89-7a8f-4f93-a59e-255777a71885" name="adm_imga@IN01APVT127 2017-07-13 11:25:40" runUser="ES-AREA1\adm_imga" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="5e0ec486-8390-4d47-996a-582ca480c912">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="adm_imga_IN01APVT127 2017-07-13 11_25_40">
      <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Plugin2\bin\Debug\Plugin2.dll" />
      <DeploymentItem filename="C:\Performance_Training\Demo_Project\Demo_Reference\bin\Debug\Demo_Reference.dll" />
      <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Custom_Parameter\bin\Debug\Custom_Parameter.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
        <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
          <Browser name="Internet Explorer 9.0" MaxConnections="6">
            <Headers>
              <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
              <Header name="Accept" value="*/*" />
              <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
              <Header name="Accept-Encoding" value="GZIP" />
            </Headers>
          </Browser>
        </WebTestRunConfiguration>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
      </AgentRule>
    </Execution>
    <Properties>
      <Property name="TestSettingsUIType" value="UnitTest" />
    </Properties>
  </TestSettings>
  <Times creation="2017-07-13T11:25:40.4325239+05:30" queuing="2017-07-13T11:25:40.7570888+05:30" start="2017-07-13T11:25:40.8611096+05:30" finish="2017-07-13T11:26:01.2336833+05:30" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="E-Com-NotWorking" storage="c:\performance_training\demo_project\demo_project\e-com-notworking.webtest" id="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" persistedWebTest="">
      <Execution id="a3babf51-143c-419c-a748-4e3465d1a50e" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" executionId="a3babf51-143c-419c-a748-4e3465d1a50e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="a3babf51-143c-419c-a748-4e3465d1a50e" testId="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" testName="E-Com-NotWorking" computerName="IN01APVT127" duration="00:00:09.5744588" startTime="2017-07-13T11:25:40.9131200+05:30" endTime="2017-07-13T11:26:01.1001566+05:30" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a3babf51-143c-419c-a748-4e3465d1a50e">
      <Output>
        <ErrorInfo>
          <Message>2 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="E-Com-NotWorking.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="5e0ec486-8390-4d47-996a-582ca480c912">
        <Description>These are default test settings for a local test run.</Description>
        <Deployment runDeploymentRoot="adm_imga_IN01APVT127 2017-07-13 11_25_40">
          <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Plugin2\bin\Debug\Plugin2.dll" />
          <DeploymentItem filename="C:\Performance_Training\Demo_Project\Demo_Reference\bin\Debug\Demo_Reference.dll" />
          <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Custom_Parameter\bin\Debug\Custom_Parameter.dll" />
        </Deployment>
        <Execution>
          <TestTypeSpecific>
            <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
              <AssemblyResolution>
                <TestDirectory useLoadContext="true" />
              </AssemblyResolution>
            </UnitTestRunConfig>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="LocalMachineDefaultRole">
          </AgentRule>
        </Execution>
        <Properties>
          <Property name="TestSettingsUIType" value="UnitTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>adm_imga_IN01APVT127 2017-07-13 11_25_40\In\a3babf51-143c-419c-a748-4e3465d1a50e\E-Com-NotWorking.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>