<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="aa0027bc-1a38-439f-8634-88283309048a" name="adm_imga@IN01APVT127 2017-07-13 11:24:29" runUser="ES-AREA1\adm_imga" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="5e0ec486-8390-4d47-996a-582ca480c912">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="adm_imga_IN01APVT127 2017-07-13 11_24_29">
      <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Plugin2\bin\Debug\Plugin2.dll" />
      <DeploymentItem filename="C:\Performance_Training\Demo_Project\Demo_Reference\bin\Debug\Demo_Reference.dll" />
      <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Custom_Parameter\bin\Debug\Custom_Parameter.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
        <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
          <Browser name="Internet Explorer 9.0" MaxConnections="6">
            <Headers>
              <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
              <Header name="Accept" value="*/*" />
              <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
              <Header name="Accept-Encoding" value="GZIP" />
            </Headers>
          </Browser>
        </WebTestRunConfiguration>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
      </AgentRule>
    </Execution>
    <Properties>
      <Property name="TestSettingsUIType" value="UnitTest" />
    </Properties>
  </TestSettings>
  <Times creation="2017-07-13T11:24:29.9294261+05:30" queuing="2017-07-13T11:24:30.2494901+05:30" start="2017-07-13T11:24:30.3415085+05:30" finish="2017-07-13T11:24:48.8387072+05:30" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="E-Com-NotWorking" storage="c:\performance_training\demo_project\demo_project\e-com-notworking.webtest" id="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" persistedWebTest="">
      <Execution id="fbccbe2c-8f05-4eb7-967d-bbeded14254e" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" executionId="fbccbe2c-8f05-4eb7-967d-bbeded14254e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="fbccbe2c-8f05-4eb7-967d-bbeded14254e" testId="8d2b5e93-3d0d-40b8-a1d5-93fedbb910c1" testName="E-Com-NotWorking" computerName="IN01APVT127" duration="00:00:07.7767051" startTime="2017-07-13T11:24:30.4025207+05:30" endTime="2017-07-13T11:24:48.7711937+05:30" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fbccbe2c-8f05-4eb7-967d-bbeded14254e">
      <Output>
        <ErrorInfo>
          <Message>4 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="E-Com-NotWorking.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="5e0ec486-8390-4d47-996a-582ca480c912">
        <Description>These are default test settings for a local test run.</Description>
        <Deployment runDeploymentRoot="adm_imga_IN01APVT127 2017-07-13 11_24_29">
          <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Plugin2\bin\Debug\Plugin2.dll" />
          <DeploymentItem filename="C:\Performance_Training\Demo_Project\Demo_Reference\bin\Debug\Demo_Reference.dll" />
          <DeploymentItem filename="C:\Performance_Training\Custom_Parameter\Custom_Parameter\bin\Debug\Custom_Parameter.dll" />
        </Deployment>
        <Execution>
          <TestTypeSpecific>
            <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
              <AssemblyResolution>
                <TestDirectory useLoadContext="true" />
              </AssemblyResolution>
            </UnitTestRunConfig>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="LocalMachineDefaultRole">
          </AgentRule>
        </Execution>
        <Properties>
          <Property name="TestSettingsUIType" value="UnitTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>adm_imga_IN01APVT127 2017-07-13 11_24_29\In\fbccbe2c-8f05-4eb7-967d-bbeded14254e\E-Com-NotWorking.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>